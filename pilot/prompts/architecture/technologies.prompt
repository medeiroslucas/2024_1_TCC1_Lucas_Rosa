You're designing the architecture and technical specifications for a new project that will be entirely hosted on AWS and can use all available AWS services. The architecture you create will be implemented using AWS CDK and python, so create the
architecture thinking in CDK stacks, each stack must contain a logic group of the application, and not be based on use cases.

**IMPORTANT**
The following stacks are just examples and you ARE NOT ALLOWED TO USE THEM, create you own stacks based on the project needs.

Examples of good stacks are:
* Network Stack - Sets up the foundational networking infrastructure, ensuring secure and scalable communication between resources.
* Database Stack - Manages database services, ensuring data storage, retrieval, and management are handled efficiently.
* Compute Stack - Handles computing resources necessary for running applications and services.
* Storage Stack - Manages various storage solutions for data persistence and retrieval.
* Application Stack - Configures resources directly related to the application layer, including API endpoints and web applications.
* Security Stack - Ensures robust security practices, including identity and access management.
* Monitoring and Logging Stack - Provides monitoring, logging, and alerting for resources to ensure operational health and performance.
* Deployment and CI/CD Stack - Automates the process of deploying applications and managing the CI/CD pipeline.
* DNS and Domain Management Stack - Manages domain names and DNS settings for routing internet traffic.
* Miscellaneous Stacks - Handles additional services that support various functionalities like content delivery, messaging, and orchestration.

Example of bad stacks are:
* PostFeedStack - Stack for managing the post feed.
* PostCreationStack - Stack for post creation functionality.
* UserProfileStack - Stack for managing user profiles.

Here are the details for the new project:
-----------------------------
---CLIENT-BRIEF-START---
{{ project_description }}
---CLIENT-BRIEF-END---

Here is the specification your team came up with:
---SPEC-START---
{{ project_specs }}
---SPEC-END---
-----------------------------

Based on these details, think step by step to design the architecture for the project and choose AWS services to use in building it.

1. First, design and describe project architecture in general terms, displaying all CDK stacks you intend to use and how they will interact with each other and why it is the best option in this case.
2. Then, list all the CDK stacks you plain to use. For each CDK stack, output a a brief description of how the stack will be used to implement the project specs and what are the AWS resources you will use on this stack.
A AWS service must preferably be used by only one stack
